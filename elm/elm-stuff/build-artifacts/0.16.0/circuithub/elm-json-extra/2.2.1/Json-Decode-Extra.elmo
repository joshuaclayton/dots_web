Elm.Json = Elm.Json || {};
Elm.Json.Decode = Elm.Json.Decode || {};
Elm.Json.Decode.Extra = Elm.Json.Decode.Extra || {};
Elm.Json.Decode.Extra.make = function (_elm) {
   "use strict";
   _elm.Json = _elm.Json || {};
   _elm.Json.Decode = _elm.Json.Decode || {};
   _elm.Json.Decode.Extra = _elm.Json.Decode.Extra || {};
   if (_elm.Json.Decode.Extra.values) return _elm.Json.Decode.Extra.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Date = Elm.Date.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Dict = Elm.Dict.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Set = Elm.Set.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var lazy = function (getDecoder) {
      return A2($Json$Decode.customDecoder,
      $Json$Decode.value,
      function (rawValue) {
         return A2($Json$Decode.decodeValue,getDecoder({ctor: "_Tuple0"}),rawValue);
      });
   };
   var maybeNull = function (decoder) {    return $Json$Decode.oneOf(_U.list([$Json$Decode.$null($Maybe.Nothing),A2($Json$Decode.map,$Maybe.Just,decoder)]));};
   var withDefault = F2(function (fallback,decoder) {
      return A2($Json$Decode.andThen,$Json$Decode.maybe(decoder),function (_p0) {    return $Json$Decode.succeed(A2($Maybe.withDefault,fallback,_p0));});
   });
   var decodeDictFromTuples = F2(function (keyDecoder,tuples) {
      var _p1 = tuples;
      if (_p1.ctor === "[]") {
            return $Json$Decode.succeed($Dict.empty);
         } else {
            var _p2 = A2($Json$Decode.decodeString,keyDecoder,_p1._0._0);
            if (_p2.ctor === "Ok") {
                  return A2($Json$Decode.andThen,
                  A2(decodeDictFromTuples,keyDecoder,_p1._1),
                  function (_p3) {
                     return $Json$Decode.succeed(A3($Dict.insert,_p2._0,_p1._0._1,_p3));
                  });
               } else {
                  return $Json$Decode.fail(_p2._0);
               }
         }
   });
   var dict2 = F2(function (keyDecoder,valueDecoder) {
      return A2($Json$Decode.andThen,$Json$Decode.dict(valueDecoder),function (_p4) {    return A2(decodeDictFromTuples,keyDecoder,$Dict.toList(_p4));});
   });
   var set = function (decoder) {
      return A2($Json$Decode.andThen,$Json$Decode.list(decoder),function (_p5) {    return $Json$Decode.succeed($Set.fromList(_p5));});
   };
   var date = A2($Json$Decode.customDecoder,$Json$Decode.string,$Date.fromString);
   var apply = F2(function (f,aDecoder) {    return A2($Json$Decode.andThen,f,function (f$) {    return A2($Json$Decode.map,f$,aDecoder);});});
   _op["|:"] = apply;
   return _elm.Json.Decode.Extra.values = {_op: _op,date: date,apply: apply,set: set,dict2: dict2,withDefault: withDefault,maybeNull: maybeNull,lazy: lazy};
};