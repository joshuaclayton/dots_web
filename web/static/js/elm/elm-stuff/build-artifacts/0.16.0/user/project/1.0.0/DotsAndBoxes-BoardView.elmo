Elm.DotsAndBoxes = Elm.DotsAndBoxes || {};
Elm.DotsAndBoxes.BoardView = Elm.DotsAndBoxes.BoardView || {};
Elm.DotsAndBoxes.BoardView.make = function (_elm) {
   "use strict";
   _elm.DotsAndBoxes = _elm.DotsAndBoxes || {};
   _elm.DotsAndBoxes.BoardView = _elm.DotsAndBoxes.BoardView || {};
   if (_elm.DotsAndBoxes.BoardView.values) return _elm.DotsAndBoxes.BoardView.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $DotsAndBoxes$Model = Elm.DotsAndBoxes.Model.make(_elm),
   $DotsAndBoxes$PlayersView = Elm.DotsAndBoxes.PlayersView.make(_elm),
   $DotsAndBoxes$TurnDesignatorView = Elm.DotsAndBoxes.TurnDesignatorView.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var board = F2(function (address,model) {
      return A2($Html.section,
      _U.list([$Html$Attributes.$class("full-board")]),
      _U.list([$DotsAndBoxes$PlayersView.playersList(model.lobby.game.players),$DotsAndBoxes$TurnDesignatorView.turnDesignator(model)]));
   });
   return _elm.DotsAndBoxes.BoardView.values = {_op: _op,board: board};
};